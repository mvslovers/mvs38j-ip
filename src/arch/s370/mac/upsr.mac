         MACRO
&LABEL   UPSR &LEVEL,&TEXT,&VALUE,&SKIP=
.*
.* Copyright 2001, 2002 James M. Morrison
.*
         GBLC  &GPFXTGD                     TGD prefix
         LCLA  &LDBUG,&LSTR
         LCLC  &NDX
         LCLC  &DBUGBYT
         LCLC  &NEWTEXT,&STRING
&NDX     SETC  '&SYSNDX'
&LDBUG   SETA  K'&SYSECT
&DBUGBYT SETC  '&SYSECT'(5,&LDBUG-4)   set TGDD* byte name from CSECT
&LABEL   IM#SECT LABEL
         AIF   ('&LEVEL' EQ '0').GEN2       level=0 always runs
         CLI   &GPFXTGD.D&DBUGBYT,C'&LEVEL' generate diag msg?
         AIF   ('&SKIP' EQ '').GEN
         BL    &SKIP                        no, br
         MEXIT
.GEN     ANOP
         BL    SKIP&NDX                     no, br
.GEN2    AIF   ('&VALUE' EQ '').NOVAL
         IM#LALR R0,&VALUE
.NOVAL   ANOP
.*
.*  &TEXT     'STRING' will generate correct call to XMITPSR.
.*    OR      RX-TYPE address or (reg) for buffer address
.*
.*  APPEND TRAILING % sign to denote R0 inclusion.
.*
         AIF   ('&TEXT'(1,1) EQ '''').STRING  1st char = '?
         IM#LALR R1,&TEXT              message address
         UCALL U370PSR                 log msg w/ R0 in hex appended
         AGO   .SKIP
*
.STRING  ANOP
         BAL   R1,CALL&NDX             skip inline message text
         DC    C'<&LEVEL> ',C&TEXT,C' %'
CALL&NDX UCALL U370PSR                 log msg w/ R0 in hex appended
.SKIP    ANOP
SKIP&NDX DS    0H
         MEXIT
.*---------------------------------------------------------------------
.*
.* LEVEL - see UDIAG macro
.* TEXT  - message to be displayed (string or RX-expression)
.*         For string, we insert <n> into string
.*         RX-expressions are on their own
.* VALUE - register to load into R0 before call to U370PSR
.*
.*---------------------------------------------------------------------
         MEND
